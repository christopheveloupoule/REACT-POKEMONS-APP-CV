{"ast":null,"code":"var _jsxFileName = \"/home/christophe/REACT-POKEMONS-APP-CV/src/components/pokemon-card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './pokemon-card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonCard = ({\n  pokemon,\n  borderColor = '#009688'\n}) => {\n  _s();\n\n  const [color, setColor] = useState(); //couleur crte ds le State 'color'\n\n  const showBorder = () => {\n    setColor(borderColor); // valeur initial de la prop save ds borderColor\n  };\n\n  const hideBorder = () => {\n    setColor('#f5f5f5'); // we put border in grey color\n  };\n\n  const formatDate = (date = new Date()) => {\n    //on ajoute une date par def avc \"new Date\" comme fct°\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  }; //METHOD FORMAT TYPE:\n\n\n  const formatType = type => {\n    let color;\n\n    switch (type) {\n      case 'Feu':\n        color = 'red lighten-1';\n        break;\n\n      case 'Eau':\n        color = 'blue lighten-1';\n        break;\n\n      case 'Plante':\n        color = 'green lighten-1';\n        break;\n\n      case 'Insecte':\n        color = 'brown lighten-1';\n        break;\n\n      case 'Normal':\n        color = 'grey lighten-3';\n        break;\n\n      case 'Vol':\n        color = 'blue lighten-3';\n        break;\n\n      case 'Poison':\n        color = 'deep-purple accent-1';\n        break;\n\n      case 'Fée':\n        color = 'pink lighten-4';\n        break;\n\n      case 'Psy':\n        color = 'deep-purple darken-2';\n        break;\n\n      case 'Electrik':\n        color = 'lime accent-1';\n        break;\n\n      case 'Combat':\n        color = 'deep-orange';\n        break;\n\n      default:\n        color = 'grey';\n        break;\n    }\n\n    return `chip ${color}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col s6 m4\",\n    onMouseEnter: showBorder,\n    onMouseLeave: hideBorder,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card horizontal\",\n      style: {\n        borderColor: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.picture,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-stacked\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: formatDate(pokemon.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: formatType(type),\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonCard, \"82MkoYdCpCBLe6G9QQs4gyc+awE=\");\n\n_c = PokemonCard;\nexport default PokemonCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"sources":["/home/christophe/REACT-POKEMONS-APP-CV/src/components/pokemon-card.tsx"],"names":["React","useState","PokemonCard","pokemon","borderColor","color","setColor","showBorder","hideBorder","formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","picture","name","created","types","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAO,oBAAP;;;AAOA,MAAMC,WAAqC,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,WAAW,GAAG;AAAxB,CAAD,KAAwC;AAAA;;AAClF,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBL,QAAQ,EAAjC,CADkF,CACrC;;AAE7C,QAAMM,UAAU,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAACF,WAAD,CAAR,CADqB,CACE;AAC1B,GAFD;;AAIA,QAAMI,UAAU,GAAG,MAAM;AACvBF,IAAAA,QAAQ,CAAC,SAAD,CAAR,CADuB,CACF;AACtB,GAFD;;AAIA,QAAMG,UAAU,GAAG,CAACC,IAAU,GAAE,IAAIC,IAAJ,EAAb,KAAoC;AAAE;AACrD,WAAQ,GAAED,IAAI,CAACE,OAAL,EAAe,IAAGF,IAAI,CAACG,QAAL,KAAgB,CAAE,IAAGH,IAAI,CAACI,WAAL,EAAmB,EAApE;AACH,GAFD,CAXkF,CAetF;;;AAEI,QAAMC,UAAU,GAAIC,IAAD,IAA0B;AACzC,QAAIX,KAAJ;;AAEA,YAAQW,IAAR;AACA,WAAK,KAAL;AACIX,QAAAA,KAAK,GAAG,eAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,gBAAR;AACA;;AACJ,WAAK,QAAL;AACIA,QAAAA,KAAK,GAAG,iBAAR;AACA;;AACJ,WAAK,SAAL;AACIA,QAAAA,KAAK,GAAG,iBAAR;AACA;;AACJ,WAAK,QAAL;AACIA,QAAAA,KAAK,GAAG,gBAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,gBAAR;AACA;;AACJ,WAAK,QAAL;AACIA,QAAAA,KAAK,GAAG,sBAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,gBAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,sBAAR;AACA;;AACJ,WAAK,UAAL;AACIA,QAAAA,KAAK,GAAG,eAAR;AACA;;AACJ,WAAK,QAAL;AACIA,QAAAA,KAAK,GAAG,aAAR;AACA;;AACJ;AACIA,QAAAA,KAAK,GAAG,MAAR;AACA;AApCJ;;AAuCA,WAAQ,QAAOA,KAAM,EAArB;AACH,GA3CD;;AA6CA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,YAAY,EAAEE,UAAzC;AAAqD,IAAA,YAAY,EAAEC,UAAnE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE;AAAEJ,QAAAA,WAAW,EAAEC;AAAf,OAAxC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEF,OAAO,CAACc,OAAlB;AAA2B,UAAA,GAAG,EAAEd,OAAO,CAACe;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAA,sBAAIf,OAAO,CAACe;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,mCAAG;AAAA,wBAAQT,UAAU,CAACN,OAAO,CAACgB,OAAT;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,kBAFF,EAIGhB,OAAO,CAACiB,KAAR,CAAcC,GAAd,CAAkBL,IAAI,iBACnB;AAAiB,YAAA,SAAS,EAAED,UAAU,CAACC,IAAD,CAAtC;AAAA,sBAA+CA;AAA/C,aAAWA,IAAX;AAAA;AAAA;AAAA;AAAA,kBADH,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBC,CAjFL;;GAAMd,W;;KAAAA,W;AAmFN,eAAeA,WAAf","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\n\ntype Props = { //On def un nouveau type pr typescript\n    pokemon: Pokemon\n    borderColor?: string // syntax propre à TS, variable is faculatif\n  };\n  \nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\n    const [color, setColor]= useState<string>(); //couleur crte ds le State 'color'\n        \n    const showBorder = () => {\n        setColor(borderColor); // valeur initial de la prop save ds borderColor\n    }\n  \n    const hideBorder = () => {\n      setColor('#f5f5f5'); // we put border in grey color\n    }\n\n    const formatDate = (date: Date= new Date()): string => { //on ajoute une date par def avc \"new Date\" comme fct°\n        return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n    }\n\n//METHOD FORMAT TYPE:\n\n    const formatType = (type: string): string => {\n        let color: string;\n    \n        switch (type) {\n        case 'Feu': \n            color = 'red lighten-1'; \n            break; \n        case 'Eau': \n            color = 'blue lighten-1'; \n            break; \n        case 'Plante': \n            color = 'green lighten-1'; \n            break; \n        case 'Insecte': \n            color = 'brown lighten-1'; \n            break; \n        case 'Normal': \n            color = 'grey lighten-3'; \n            break; \n        case 'Vol': \n            color = 'blue lighten-3'; \n            break; \n        case 'Poison': \n            color = 'deep-purple accent-1'; \n            break; \n        case 'Fée': \n            color = 'pink lighten-4'; \n            break; \n        case 'Psy': \n            color = 'deep-purple darken-2'; \n            break; \n        case 'Electrik': \n            color = 'lime accent-1'; \n            break; \n        case 'Combat': \n            color = 'deep-orange'; \n            break; \n        default: \n            color = 'grey'; \n            break; \n        }\n    \n        return `chip ${color}`;\n    }\n\n    return (\n        <div className=\"col s6 m4\" onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n          <div className=\"card horizontal\" style={{ borderColor: color }}>\n            <div className=\"card-image\"> \n              <img src={pokemon.picture} alt={pokemon.name}/>\n            </div>\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                <p>{pokemon.name}</p>\n                <p><small>{formatDate(pokemon.created)}</small></p>\n                {/*<p><small>{pokemon.created.toString()}</small></p>*/}\n                {pokemon.types.map(type => (\n                    <span key={type} className={formatType(type)}>{type}</span>\n                ))}\n              </div>\n            </div>\n          </div> \n        </div>\n      );\n    }\n  \nexport default PokemonCard;"]},"metadata":{},"sourceType":"module"}