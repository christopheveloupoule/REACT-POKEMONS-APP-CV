{"ast":null,"code":"var _jsxFileName = \"/home/christophe/REACT-POKEMONS-APP-CV/src/pages/pokemon-list.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n//import POKEMONS from '../models/mock-pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service';\nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonList = () => {\n  _s();\n\n  const [pokemons, setPokemons] = useState([]); //we Initialize our state component with an empty array per default\n\n  useEffect(() => {\n    //setPokemons(POKEMONS); on remplace cette cst en DUR pr notre APIREST via FETCH\n    //on recupe des pokemons depuis notre APIREST et on les place dans le STATE de notre composant\n\n    /*fetch('http://localhost:3001/pokemons') //requete de type GET en lui passant une URL\n    .then(response => response.json()) //on recupe un {}response de la part de notre méthode FETCH & methode json sur cet reponse pr extraire les datas\n    .then((pokemons) => { //Met à dispo ns pokemons ds le STATE de ns composants\n    setPokemons(pokemons)   \n    });*/\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons)); //utilisat° de notre service pr recup la list des pokemons depuis l'API REST\n    //puis on met a jour le STATE de notre composant avc les pokemon fraichemnt reçus\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"center\",\n      children: \"Pok\\xE9dex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(PokemonSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), \" \", pokemons.map(pokemon => /*#__PURE__*/_jsxDEV(PokemonCard, {\n          pokemon: pokemon\n        }, pokemon.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn-floating btn-large waves-effect waves-light red z-depth-3\",\n        style: {\n          position: 'fixed',\n          bottom: '25px',\n          right: '25px'\n        },\n        to: \"/pokemon/add\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonList, \"HTV26hiVYObM9ZdttYFfm0Hoy8g=\");\n\n_c = PokemonList;\nexport default PokemonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"sources":["/home/christophe/REACT-POKEMONS-APP-CV/src/pages/pokemon-list.tsx"],"names":["React","useState","useEffect","PokemonCard","PokemonService","Link","PokemonSearch","PokemonList","pokemons","setPokemons","getPokemons","then","map","pokemon","id","position","bottom","right"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,EAA6CC,SAA7C,QAA8D,OAA9D;AAEA;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;;AAEA,MAAMC,WAA8B,GAAG,MAAM;AAAA;;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAY,EAAZ,CAAxC,CAD2C,CAE3C;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;;AAEA;AACN;AACA;AACA;AACA;AACIE,IAAAA,cAAc,CAACM,WAAf,GAA6BC,IAA7B,CAAkCH,QAAQ,IAAIC,WAAW,CAACD,QAAD,CAAzD,EATc,CAUlB;AACA;AACG,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADA,OAECA,QAAQ,CAACI,GAAT,CAAaC,OAAO,iBACnB,QAAC,WAAD;AAA8B,UAAA,OAAO,EAAEA;AAAvC,WAAkBA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,gBADD,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,+DAAhB;AACA,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,OAAX;AAAoBC,UAAAA,MAAM,EAAE,MAA5B;AAAoCC,UAAAA,KAAK,EAAE;AAA3C,SADP;AAEA,QAAA,EAAE,EAAC,cAFH;AAAA,+BAGE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApCD;;GAAMV,W;;KAAAA,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\n//import POKEMONS from '../models/mock-pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service';\nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\n\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  //we Initialize our state component with an empty array per default\n  \n  useEffect(() => {\n      //setPokemons(POKEMONS); on remplace cette cst en DUR pr notre APIREST via FETCH\n      //on recupe des pokemons depuis notre APIREST et on les place dans le STATE de notre composant\n   \n      /*fetch('http://localhost:3001/pokemons') //requete de type GET en lui passant une URL\n    .then(response => response.json()) //on recupe un {}response de la part de notre méthode FETCH & methode json sur cet reponse pr extraire les datas\n    .then((pokemons) => { //Met à dispo ns pokemons ds le STATE de ns composants\n      setPokemons(pokemons)   \n    });*/\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\n//utilisat° de notre service pr recup la list des pokemons depuis l'API REST\n//puis on met a jour le STATE de notre composant avc les pokemon fraichemnt reçus\n  }, []);\n  \n  return (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\"> \n        <div className=\"row\"> \n        <PokemonSearch /> {/*Ajout recherche de Pokemon et import...*/}\n        {pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.id} pokemon={pokemon} />\n        ))}\n        </div>\n        <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\n        style={{position: 'fixed', bottom: '25px', right: '25px'}}\n        to=\"/pokemon/add\">\n          <i className=\"material-icons\">add</i>\n        </Link>\n      </div>\n    </div> \n  );\n}\n  \nexport default PokemonList;"]},"metadata":{},"sourceType":"module"}