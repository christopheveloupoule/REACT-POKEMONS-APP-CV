{"ast":null,"code":"var _jsxFileName = \"/home/christophe/REACT-POKEMONS-APP-CV/src/components/pokemon-search.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PokemonService from '../services/pokemon-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonSearch = () => {\n  _s();\n\n  //on def 2 états pr ce composant\n  const [term, setTerm] = useState(''); //save le term de recherch pr le user\n\n  const [pokemons, setPokemons] = useState([]); //stock ls pokemons corresp. aux termes de recherches\n  //On def ls METHOD propr aux formulaire ds REACT lorsque le user saisi une valeur\n\n  const handleInputChange = e => {\n    const term = e.target.value;\n    setTerm(term); //MAJ le state de notre composant avec la nvelle value du \"term\" demander pr le user\n    //On verif que le \"term\" demandé pr le user fait au moins 2 caract de lg \n\n    if (term.length <= 1) {\n      setPokemons([]); //si qu'un seul caract aucun affichage...\n\n      return;\n    } //On appelle la METHOD searchPokemon en lui passant en param le terme de recherche du user\n    //et on remplit le STATE ds results avc les Pokemon demandés\n\n\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col s12 m6 offset-m3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Rechercher un pok\\xE9mon\",\n              value: term,\n              onChange: e => handleInputChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collection\",\n            children: pokemons.map(pokemon => /*#__PURE__*/_jsxDEV(Link, {\n              to: `/pokemons/${pokemon.id}`,\n              className: \"collection-item\",\n              children: pokemon.name\n            }, pokemon.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }, this)\n            /*On list ls Pokemons recuperer depuis le STATE qui corresp au result de la recherche,\n            si le user click sr un des pokemon de la liste ds results, on le redirige vers la fiche detaillée de ce Pokemon*/\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonSearch, \"LLiFTe3GhUP67sjNfBWBI1oXRt0=\");\n\n_c = PokemonSearch;\nexport default PokemonSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonSearch\");","map":{"version":3,"sources":["/home/christophe/REACT-POKEMONS-APP-CV/src/components/pokemon-search.tsx"],"names":["React","useState","Link","PokemonService","PokemonSearch","term","setTerm","pokemons","setPokemons","handleInputChange","e","target","value","length","searchPokemon","then","map","pokemon","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,cAAP,MAA2B,6BAA3B;;;AAEA,MAAMC,aAAgC,GAAG,MAAM;AAAA;;AAE/C;AACE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAS,EAAT,CAAhC,CAH6C,CAGC;;AAC9C,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAY,EAAZ,CAAxC,CAJ6C,CAIY;AAE3D;;AACE,QAAMQ,iBAAiB,GAAIC,CAAD,IAAkD;AAC1E,UAAML,IAAI,GAAGK,CAAC,CAACC,MAAF,CAASC,KAAtB;AACAN,IAAAA,OAAO,CAACD,IAAD,CAAP,CAF0E,CAE3D;AAEnB;;AACI,QAAGA,IAAI,CAACQ,MAAL,IAAe,CAAlB,EAAqB;AACnBL,MAAAA,WAAW,CAAC,EAAD,CAAX,CADmB,CACF;;AACjB;AACD,KARyE,CAU9E;AACA;;;AACIL,IAAAA,cAAc,CAACW,aAAf,CAA6BT,IAA7B,EAAmCU,IAAnC,CAAwCR,QAAQ,IAAIC,WAAW,CAACD,QAAD,CAA/D;AACD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACA;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,WAAW,EAAC,0BAA/B;AAAuD,cAAA,KAAK,EAAEF,IAA9D;AAAoE,cAAA,QAAQ,EAAEK,CAAC,IAAID,iBAAiB,CAACC,CAAD;AAApG;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBACCH,QAAQ,CAACS,GAAT,CAAcC,OAAD,iBACZ,QAAC,IAAD;AAAuB,cAAA,EAAE,EAAG,aAAYA,OAAO,CAACC,EAAG,EAAnD;AAAsD,cAAA,SAAS,EAAC,iBAAhE;AAAA,wBACGD,OAAO,CAACE;AADX,eAAWF,OAAO,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAEQ;AAClB;AAJS;AADD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3CD;;GAAMd,a;;KAAAA,a;AA6CN,eAAeA,aAAf","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n\nconst PokemonSearch: FunctionComponent = () => {\n \n//on def 2 états pr ce composant\n  const [term, setTerm] = useState<string>(''); //save le term de recherch pr le user\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]); //stock ls pokemons corresp. aux termes de recherches\n\n//On def ls METHOD propr aux formulaire ds REACT lorsque le user saisi une valeur\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term); //MAJ le state de notre composant avec la nvelle value du \"term\" demander pr le user\n\n//On verif que le \"term\" demandé pr le user fait au moins 2 caract de lg \n    if(term.length <= 1) {\n      setPokemons([]); //si qu'un seul caract aucun affichage...\n      return;\n    }\n\n//On appelle la METHOD searchPokemon en lui passant en param le terme de recherche du user\n//et on remplit le STATE ds results avc les Pokemon demandés\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link> /*On list ls Pokemons recuperer depuis le STATE qui corresp au result de la recherche,\n          si le user click sr un des pokemon de la liste ds results, on le redirige vers la fiche detaillée de ce Pokemon*/\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n \nexport default PokemonSearch;"]},"metadata":{},"sourceType":"module"}