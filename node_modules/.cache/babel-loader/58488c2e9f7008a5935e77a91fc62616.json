{"ast":null,"code":"var _jsxFileName = \"/home/christophe/REACT-POKEMONS-APP-CV/src/PrivateRoute.tsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service'; //component vaut PokemonList et rest vaut /\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => {\n    //render : comportement de rendu de cette route\n    const isAuthenticated = AuthenticationService.isAuthenticated; //demande au service si un user connect actuellemnt\n\n    if (!isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this); //on redirige le user vers la page de connexion s'il n'est pas connect et de s'authentifier...\n    }\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this); //si user connect, il est re-diriger vers le composant souhaité (listes des pokemon par ex)\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/christophe/REACT-POKEMONS-APP-CV/src/PrivateRoute.tsx"],"names":["React","Route","Redirect","AuthenticationService","PrivateRoute","component","Component","rest","props","isAuthenticated","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,qBAAP,MAAkC,mCAAlC,C,CAEA;;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACnB,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EAAGC,KAAD,IAAW;AAAE;AACpC,UAAMC,eAAe,GAAGN,qBAAqB,CAACM,eAA9C,CADkC,CAC6B;;AAC/D,QAAI,CAACA,eAAL,EAAsB;AACpB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP,CADoB,CAC4B;AACjD;;AAED,wBAAO,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP,CANkC,CAMF;AACjC;AAPD;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMJ,Y;AAWN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n \n//component vaut PokemonList et rest vaut /\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => { //render : comportement de rendu de cette route\n    const isAuthenticated = AuthenticationService.isAuthenticated; //demande au service si un user connect actuellemnt\n    if (!isAuthenticated) {    \n      return <Redirect to={{ pathname: '/login' }} /> //on redirige le user vers la page de connexion s'il n'est pas connect et de s'authentifier...\n    }\n  \n    return <Component {...props} /> //si user connect, il est re-diriger vers le composant souhaité (listes des pokemon par ex)\n  }} />\n);\n  \nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}